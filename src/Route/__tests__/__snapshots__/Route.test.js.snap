// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Route renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Route
    componentPath="Index"
    path="/"
    routes={
      Array [
        Object {
          "componentPath": "Index",
          "path": "/",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "componentPath": "Index",
      "path": "/",
      "routes": Array [
        Object {
          "componentPath": "Index",
          "path": "/",
        },
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "componentPath": "Index",
        "path": "/",
        "routes": Array [
          Object {
            "componentPath": "Index",
            "path": "/",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "locale": Object {
        "lmsg": [MockFunction] {
          "calls": Array [
            Array [
              "Index.title",
              Object {},
              null,
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": "Page title",
            },
          ],
        },
      },
    },
    "hydrateIn": undefined,
  },
}
`;
